# ╔═══════════════════════════════════════════════════════════════════════════╗
# ║                                                                           ║
# ║  Best Practices for Secure SSH Configuration (~/.ssh/config)              ║
# ║  Author: zx0r                                                             ║
# ║  Contact: https://github.com/zx0r                                         ║
# ║                                                                           ║                                                                           ║
# ║  Documentation:                                                           ║                                                                           ║
# ║  https://man7.org/linux/man-pages/man1/ssh.1.html                         ║
# ║  https://man7.org/linux/man-pages/man5/ssh_config.5.html                  ║                                                                           ║
# ║                                                                           ║
# ╚═══════════════════════════════════════════════════════════════════════════╝

# Note:
# This configuration optimizes SSH security, usability and integration 
# with GitHub, GPG, and SSH agent.

# ssh-keygen -t ed25519 -C "your_email@example.com" -f ~/.ssh/id_ed25519 -o -a 100
# -C "your_email@example.com" → Adds an optional comment (e.g., your email).
# -f ~/.ssh/id_ed25519 → Saves the key in the specified file.
# -o → Uses the new OpenSSH private key format for better security.
# -a 100 → Increases KDF rounds for better brute-force resistance.

# Example host-specific override (place BEFORE Host * block)
# Host openwrt
#    HostName 192.168.11.1
#    User zx0r
#    IdentityFile ~/.ssh/openwrt_ed25519
#    Port 2222

# Create the directory for control master sockets
# Run the following commands in the terminal:
# mkdir -p ~/.ssh/controlmasters && chmod 700 ~/.ssh/controlmasters

# Automatically add formatted records to the known_hosts file for GitHub, you can use the ssh-keyscan command. 
# This command allows you to gather the public SSH keys of a host and append them directly to the known_hosts file.
# #!/bin/sh

# # Ensure the known_hosts_github file exists
# KNOWN_HOSTS_FILE=~/.ssh/known_hosts_github
# touch $KNOWN_HOSTS_FILE
# chmod 644 $KNOWN_HOSTS_FILE

# # Add GitHub keys to the known_hosts_github file
# ssh-keyscan github.com gist.github.com [ssh.github.com]:443 >> $KNOWN_HOSTS_FILE

# Verify Host Key Before Trusting
# ssh-keygen -l -f ~/.ssh/known_hosts_github

# Use UserKnownHostsFile in Scripts
# ssh -o UserKnownHostsFile=~/.ssh/known_hosts_github -T git@github.com

# echo "GitHub SSH keys added to $KNOWN_HOSTS_FILE"

# -----------------------------------------------------------------------------------------------
# Enable SSH Agent Forwarding for Secure GPG Usage
Host ssh-gpg
  RemoteForward 52698 /run/user/1000/gnupg/S.gpg-agent.ssh  # Forward SSH agent socket for GPG signing

# -----------------------------------------------------------------------------------------------
# GPG Key Configuration for SSH Authentication
Host gpg-auth
  IdentitiesOnly yes
  IdentityFile ~/.gnupg/private-keys-v1.d/gpg-auth-key     # Use GPG key for SSH authentication

# -----------------------------------------------------------------------------------------------

Host *.github.com
  User git
  HostName github.com
  UserKnownHostsFile ~/.ssh/known_hosts_github  # Specify a separate known hosts file for GitHub

# -----------------------------------------------------------------------------------------------

Host gist.github.com *.gist.github.com
  User git
  HostName gist.github.com
  UserKnownHostsFile ~/.ssh/known_hosts_github  # Specify a separate known hosts file for GitHub

# -----------------------------------------------------------------------------------------------

Host ssh.github.com *.ssh.github.com 443.github.com *.443.github.com
  User git
  Port 443
  HostName ssh.github.com
  UserKnownHostsFile ~/.ssh/known_hosts_github  # Specify a separate known hosts file for GitHub

# -----------------------------------------------------------------------------------------------

Host zx0r.github.com zx0r.gist.github.com zx0r.ssh.github.com zx0r.443.github.com
  User zx0r
  UseKeychain yes                               # Store passphrase in Keychain for convenience
  AddKeysToAgent yes                            # Automatically add key to SSH agent
  IdentitiesOnly yes                            # Restrict authentication to specified keys only
  IdentityFile ~/.ssh/zx0r@github               # Use specific SSH key

# -----------------------------------------------------------------------------------------------

# General Settings
Host *
  IgnoreUnknown AddKeysToAgent,Protocol,UseRoaming,UseKeychain  # Ignore unknown options
  Port 22                                # Specify the default port to connect to on the remote host
  LogLevel VERBOSE                       # Set the log level to verbose.Default: INFO
  AddressFamily inet # Specifies which address family to use when connecting. inet (use IPv4only), or inet6 (use IPv6 only)
  ServerAliveInterval 60                 # Set the interval for sending server alive messages
  ServerAliveCountMax 3                  # Set the maximum number of server alive messages
  TCPKeepAlive yes                       # Enable TCP keepalive
  Compression no                         # Disable compression
  UseRoaming no                          # Disable roaming
  Protocol 2                             # Disable legacy SSHv1
  PermitLocalCommand no                  # Disable execution of local commands
  PermitTunnel no                        # Disable tunnel device forwarding
  Tunnel no                              # Disable tunnel device forwarding
  TunnelDevice any:any                   # Specify the tunnel device
  ExitOnForwardFailure yes               # Exit on port forward failure
  BatchMode no                           # Disable batch mode (disallows interaction)
  StdinNull yes                          # Redirect stdin from /dev/null (prevents reading from stdin)
  RequestTTY auto                        # Enable pseudo-terminal allocation
  ConnectionAttempts 3                   # Set the number of connection attempts
  ConnectTimeout 10                      # Set the connection timeout in seconds
  EnableEscapeCommandline no             # Disable escape command line
  EscapeChar none                        # Disable escape character
  ForkAfterAuthentication no             # Disable forking after authentication
  IPQoS none                             # Disable IP QoS
  ControlMaster auto                     # Enable control master mode for connection sharing
  ControlPersist yes                     # Enable control persist for connection sharing
  ControlPath ~/.ssh/controlmasters/%r@%h:%p  # Specify the control path for connection sharing

  # Authentication Settings
  AddKeysToAgent yes                     # Add keys to the authentication agent
  IdentitiesOnly yes                     # Use only the identity files specified in the configuration
  IdentityAgent SSH_AUTH_SOCK            # Specify the identity agent
  IdentityFile ~/.ssh/id_rsa
  IdentityFile ~/.ssh/id_ed25519         # Specify the identity file for public key authentication
  PubkeyAuthentication yes               # Enable public key authentication
  PreferredAuthentications publickey     # Specify the preferred authentication methods
  PasswordAuthentication no              # Disable password authentication
  ChallengeResponseAuthentication no     # Disable challenge-response authentication
  HostbasedAuthentication no             # Disable host-based authentication
  KerberosAuthentication no              # Disable Kerberos authentication
  GSSAPIAuthentication no                # Disable GSSAPI-based authentication
  GSSAPIDelegateCredentials no           # Disable forwarding (delegation) of GSSAPI credentials
 
# Host Key and Verification Settings
  CheckHostIP yes                        # Check the host IP address in the known hosts file
  HashKnownHosts yes                     # Enable hashing of known host names and addresses
  UpdateHostKeys yes                     # Enable automatic update of host keys
  VerifyHostKeyDNS yes                   # Enable verification of host key DNS  ? no
  StrictHostKeyChecking yes              # Enable strict host key checking
  FingerprintHash sha256                 # Specify the hash algorithm for fingerprints
  UserKnownHostsFile ~/.ssh/known_hosts  # Specify the file to store known host keys
  GlobalKnownHostsFile /etc/ssh/ssh_known_hosts  # Specify the global file to store known host keys

  # Forwarding and Agent Settings
  ForwardX11 no                          # Disable X11 forwarding
  ForwardAgent no                        # Disable forwarding of the authentication agent connection
  GatewayPorts no                        # Disable gateway ports
  LocalForward no                        # Disable local port forwarding
  RemoteForward no                       # Disable remote port forwarding
  DynamicForward no                      # Disable dynamic port forwarding
  ForwardX11Trusted no                   # Disable trusted X11 forwarding
  PermitRemoteOpen none                  # Disable remote open

# Canonicalization Settings
  CanonicalizeMaxDots 1                  # Specify the maximum number of dots in the canonicalized hostname
  CanonicalizeHostname no               # Enable hostname canonicalization
  CanonicalizeFallbackLocal no           # Disable fallback to uncanonicalized name
   # CanonicalDomains example.com           # Specify canonical domains
   # CanonicalizePermittedCNAMEs *.example.com  # Specify permitted CNAMEs

# Miscellaneous Settings
  RekeyLimit 1G 1h                       # Specify the rekey limit
  LocalCommand true                      # Enable local commands
  SessionType interactive                # Set the session type
  VisualHostKey no                       # Enable visual host key
  RequiredRSASize 2048                   # Set the required RSA key size
  ClearAllForwardings yes                # Clear all forwardings
  StreamLocalBindMask 0177               # Set the local bind mask
  StreamLocalBindUnlink yes              # Enable unlinking of stream local bind
  NumberOfPasswordPrompts 3              # Set the number of password prompts
  NoHostAuthenticationForLocalhost no    # Disable no host authentication for localhost
  # KnownHostsCommand /usr/bin/ssh-keyscan -H  # Specify the known hosts command
  # PKCS11Provider /usr/lib/ssh-keychain.dylib  # Specify the PKCS#11 provider

  # Certificate Settings
  CASignatureAlgorithms rsa-sha2-512     # Specify the CA signature algorithms
  CertificateFile ~/.ssh/id_ed25519-cert.pub  # Specify the certificate file

  # Environment Settings
  SendEnv LANG LC_*                      # Send specific environment variables to the server
  XAuthLocation /usr/X11R6/bin/xauth     # Specify the location of the xauth binary
  SetEnv PATH=/usr/local/bin:/usr/bin:/bin  # Set environment variables

  # Encryption and Algorithms Settings
  PubkeyAcceptedAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256 # Accept the specified public key algorithms
  HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-ed25519,rsa-sha2-512,rsa-sha2-256 # Reject weak keys
  Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr  # Specify the ciphers to use for encrypting the session
  MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512 # Specify the MAC algorithms to use
  KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group-exchange-sha1 # Specify the key exchange algorithms to use
  KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group18-sha512,diffie-hellman-group16-sha512 # Modern KEX

# -----------------------------------------------------------------------------------------------





